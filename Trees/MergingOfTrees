#include<stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node* right;
    struct Node* left;
};

struct Node* root=NULL;
struct Node* root1=NULL;
struct Node* create(int ele)
{
    struct Node *newNode=(struct Node*)malloc(sizeof(struct Node));
    newNode->data=ele;
    newNode->right=NULL;
    newNode->left=NULL;
    return newNode;
}
struct Node* insert(struct Node* root,int ele)
{
    if(root==NULL)
    {
        root=create(ele);
        
    }
    else
    {
       if(ele>root->data)
       {
           root->right=insert(root->right,ele);
          
       }
       else
       {
           root->left=insert(root->left,ele);
       }
    }
    return root;
}

void disp(struct Node* root)
{
    if(root==NULL)
    {
        return;
    }
    else
    {
        disp(root->left);
        printf("%d ",root->data);
        disp(root->right);
    }
}

struct Node* merge(struct Node* root,struct Node* root1)
{
    if(root==NULL)
    {
        return root1;
    }
    if(root1==NULL)
    {
        return root;
    }
    else
    {
        root->data=root->data+root1->data;
        root->left=merge(root->left,root1->left);
        root->right=merge(root->right,root1->right);
        
    }
    return root;
}

int main()
{
    int n;
    scanf("%d",&n);
    while(n--)
    {
        int p;
        scanf("%d",&p);
        root=insert(root,p);
    }
    disp(root);
    scanf("%d",&n);
    while(n--)
    {
        int k;
        scanf("%d",&k);
        root1=insert(root1,k);
    }
    printf("\n");
     disp(root1);
     root=merge(root,root1);
     printf("\n");
     disp(root);
     
}



/*
5
10 8 20 15 30
4
100 50 200 125

8 10 15 20 30 
50 100 125 200 
58 110 140 220 30 */
